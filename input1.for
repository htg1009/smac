      SUBROUTINE INPUT(*)
C     Version 04-13-98
C     SIMULATION MODEL OF AUTOMOBILE COLLISIONS -SMAC
C
      COMMON/CONST/ G,RAD,PI,TWOPI,PIO2,PI32,ND2,ND4,ND8,NIN,NOUT
      COMMON/INTG/NEQ,T,DT,VAR(12),DER(12)
      EQUIVALENCE (VAR(1),XCP1),(VAR(2),YCP1),(VAR(3),PSI1),
     1            (VAR(4),PSI1D),(VAR(5),U1),(VAR(6),V1),
     2            (VAR(7),XCP2),(VAR(8),YCP2),(VAR(9),PSI2),
     3            (VAR(10),PSI2D),(VAR(11),U2),(VAR(12),V2)
      EQUIVALENCE (DER(1),DXCP1),(DER(2),DYCP1),(DER(3),DPSI1),
     1            (DER(4),DPSI1D),(DER(5),DU1),(DER(6),DV1),
     2            (DER(7),DXCP2),(DER(8),DYCP2),(DER(9),DPSI2),
     3            (DER(10),DPSI2D),(DER(11),DU2),(DER(12),DV2)
      COMMON/INPT/  T0,TF,DTTRA0,DTCOL0,DTCLT0,DTPRN0,UVMIN,PSIDMN,FVEH0
     1             ,XCP10,YCP10,PSI10,PSI1D0,U10,V10,
     2              XCP20,YCP20,PSI20,PSI2D0,U20,V20,
     3              A1,B1,TR1,FIZ1,FM1,PSIR10,XF1,XR1,YS1,
     4              A2,B2,TR2,FIZ2,FM2,PSIR20,XF2,XR2,YS2,
     5              CSTFI(8),TBTQ1,TETQ1,TINCQ1,NTBLQ1,NTQ1,
     6              TBTQ2,TETQ2,TINCQ2,NTBLQ2,NTQ2,TII(8,201),
     7              TBPSF1,TEPSF1,TINCP1,NTBLP1,NPSF1,
     8              TBPSF2,TEPSF2,TINCP2,NTBLP2,NPSF2,PSIFI(4,201),
     9              XBP(2),YBP(2),XMU1,XMU2,CMU
      COMMON/INPT/  DELPS0,DELRO0,ALAMB,ZETAV,AKV(2) ,AMU,C0,C1,C2,
     1              PSLM10,PSLM20,PSLM30,PSLM40,PSLM50,PSLM60,PSLM70,
     2              PSLM80,HED(40),DADE(3),XINPUT(9)
C
      COMMON/OPTIONS/ IOPTION, DTINT, STEPPSI, STEPDT, SINPSI, SINFREQ,
     1                GAIN, DISLKAHD, DW1F, DW1R, DW2F, DW2R
      COMMON/OPTIONS2/ IOPT1, IOPT2
      COMMON/SNOISE/ YMAG, YFREQ
      COMMON/OTHERFILES/ NOUT1, NOUT2
C
      COMMON/TRAJEC/ ITRAJ,XCIR,YCIR,RWYRAD,XYTB(2,201),DLAT1,DLAT2
     1               ,DYAW1,DYAW2
C
      COMMON/YCOMP/ FREQA,FREQB,TL1,TL2,YL1,YL2,PYL1,PYL2
C
      COMMON/DELAY/ DY1L(11),DY2L(11),YAW1L(11),YAW2L(11)
     1              ,DYAW1L(11),DYAW2L(11),TDGT,DTDGT,IDLY,JDLY
C
      COMMON/INTGR/JCC(4),JCOR(4),NPSIB,IPSIB0,IPSIB,IBB,IFF,NDTAB,
     1             I9,J9(361,2),  NPSJB,IPSJB,I3,ILAST,IL,IND1,IND2,INDI
     2             ,INDJ,ISTOP,ITZER1,ITZER2,IPZER1,IPZER2,ICOUNT,INDXB,
     3             ICOLLP,ICOLL,IQ,IND,IVEH,LL,ICTVDI,ITCOL,ITFLG1,
     4             ITFLG2,NWRDB1,NWRDE1,NWRDB2,NWRDE2,ICOLAC
C             IN COMMON /COMP/ DO NOT DISTURB THE ORDER OF THE VARIABLES
C                              WHICH ARE EQUIVALENCED TO ARRAYS.
      COMMON/COMP/  DTTRAJ,DTCOLL,DTCOLT,DTPRNT,UVMN2,PSIDMA,TPRINT,DTP,
     1              U1V1SQ,U2V2SQ,DELPSI,DELPST,DELPS2,DELRHO,
     2              PSILM1,PSILM2,PSILM3,PSILM4,PSILM5,PSILM6,PSILM7,
     3              PSILM8,EJJ(4,2),GJJ(4,2),C1OC2,PSCC,PSIR1,PSIR2,
     4             XCMXC1,XCMXC2,YCMYC1,YCMYC2,SPSI1,SPSI2,CPSI1,CPSI2,
     5             XCPI,YCPI,PSII,XCPJ,YCPJ,PSIJ,XCMXC,YCMYC,SPSIJ,
     6             CPSIJ,XFI,XRI,YSI,XFJ,XRJ,YSJ,AKVI,AKVJ,EJ,GJ,
     7             XPJ(4),YPJ(4),ANGYX,SPAN,PSIBPI(4),PSIBPB,PSIBPF,
     8             FNPSIB,PSIBB,PSIB,PSFMPS,SCPSIB,CSPSIB,
     9             RHOBI,RHOBIN(4),PSIBIJ,SPSBIJ,CPSBIJ,XBIJ,YBIJ,PSJTB
      COMMON/COMP/ PSIBPJ,FNPSJB,PSIBJ,RHOBJ,XYJSQR,SPSIB,CPSIB,XBI,YBI,
     1         PRESI,PRESJ,XYSR,DELTA,CRHO,RHOBIC,RHOBMX,RHOBIT,RHOBT,
     2             SPSI21,CPSI21,X2TEM,Y2TEM,XX,YY,PAV,XXYYSR,FN1,SPSF,
     3             CPSF,X1AV,Y1AV,XYAVSR,X2TERM,Y2TERM,SPS21F,CPS21F,
     4             X2AV,Y2AV,VT1AV,VT2AV,VTMVT,FRICT,FNX1,FNY1,FNN1,
     5             FNX2,FNY2,FNN2,SFX1,SFY1,SFN1,SFX2,SFY2,SFN2,
     6              SFX1C,SFX2C,SFY1C,SFY2C,SFN1C,SFN2C,
     7              SFX1T,SFX2T,SFY1T,SFY2T,SFN1T,SFN2T, TCOL,TEND,
     8              TREST1,TREST2,TCOLS1,TCOLS2,P1TEM,P2TEM,U1V1E,U2V2E,
     9              EXTRA(10)
      COMMON/COMPT/ W(8),XWP(8),YWP(8),FLAGW(8),PSIW(8),TQW(8),
     1             TFX,TFY,TMOM,PSIRR,COEF,COEF1,COEF2,TRD2,TRD21,TRD22,
     2             XBMXB,FNUM,A,B,FIZ,FMASS,XC,YC,U,V,PSIC,PSICD,UD2,
     3             SGNU,SGNI,AOMB,CSPSIC,SNPSIC,TRCPSC,TRSPSC,TRPSCD,
     4             XI,XW,YW,SX,SY,S,XPP,YPP,RHO,RHOP,XMUS,XMU,PSI,XNUM,
     5             XDEN,RATIO,ALFA,F,TIF,FC,FCOS,SMAL,FSMX,FS,BETB,FX,FY
     6             ,CSPSI,SNPSI,XCXC,YCYC,SPJ,CPJ,SPIJ,CPIJ,XFJJ,XRJJ,
     7              YSJJ,EJJI,GJJI,XICORJ,YICORJ,NTQ,TBTQ,TETQ,TINCRQ,
     8             NPSF,TBPSF,TEPSF,TINCRP
      COMMON/TAB/  TRHOB(361,2),TROBMX(361,2),TPSIB(361,2),
     1             TCPSIB(361,2),TSPSIB(361,2),TXB1(100),TYB1(100),
     2             TPSB1(100),TPRES1(100)
C
      DIMENSION   XCMXCI(2),YCMYCI(2),SPSII(2),CPSII(2),PSLM0(8),PSLM(8)
      EQUIVALENCE (XCMXCI(1),XCMXC1),(YCMYCI(1),YCMYC1),(SPSII(1),SPSI1)
     1           ,(CPSII(1),CPSI1),(PSLM0(1),PSLM10),(PSLM(1),PSILM1)
      EQUIVALENCE (XINPUT(1),FMOVIE)
      DIMENSION DUM(9),CARDIM(20)
      DIMENSION TTARG(201)
      EQUIVALENCE (TXB1(1),TTARG(1))
C
      DATA BLANK/4H    /
      DATA  NAMEQ/4H  TI/,NAMEP/4HPSIF/,NO1/1/,NO2/2/
C
    1 READ(NIN,1000,END=500)(HED(I),I=1,40)
 1000 FORMAT(20A4)
      GO TO 2
C
  500 WRITE(NOUT,1001)
 1001 FORMAT('1End of input - SMAC completed')
      RETURN 1
C
    2 WRITE(NOUT,1002) HED
 1002 FORMAT(1H1,20A4/1X,20A4)
          DO 3 I=1,3
          II = 37 + I
          DADE(I) = HED(II)
    3     HED(II) = BLANK
C
C     PUNCH DATE IN COL 69 THRU 80 ON SECOND HEADING CARD
C
    4 READ(NIN,1003) CARDIM,DUM,ICARD
c    4 READ(NIN,1003) DUM,ICARD
 1003 FORMAT( 20A4,T1,9F8.0,I8)
c 1003 FORMAT( 9F8.0,I8)
C      WRITE(6,*) ' just read icard = ', icard
      WRITE(NOUT,1004) CARDIM
 1004 FORMAT(1X,20A4)
      IF(ICARD.GE.9999) GO TO 120
      GO TO (5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31) ,ICARD
      WRITE(NOUT,1005) CARDIM
 1005 FORMAT(19HOILLEGAL INPUT CARD /1X,20A4)
      STOP
C
    5 T0 = DUM(1)
      TF = DUM(2)
C             THE COMPUTING AND PRINTING INTERVALS CANNOT BE ZERO.
C         IF THE INTERVALS ARE BLANK ON INPUT, THEY ARE SET TO STANDARD.
      IF(DUM(3)) 51,52,51
   51 DTTRA0 = DUM(3)
      GO TO 53
   52 DTTRA0 = 0.025
   53 IF(DUM(4)) 54,55,54
   54 DTCOL0 = DUM(4)
      GO TO 56
   55 DTCOL0 = 0.001
   56 IF(DUM(5)) 57,58,57
   57 DTCLT0 = DUM(5)
      GO TO 59
   58 DTCLT0 = 0.005
   59 IF(DUM(6)) 60,61,60
   60 DTPRN0 = DUM(6)
      GO TO 62
   61 DTPRN0 = DTCOL0
C            ASSUME DTCOL0 IS THE SMALLEST INTERVAL
C             WILL PRINT  EVERY INTERVAL
   62 IF(DUM(9)) 65,65,63
   63 IF(DUM(9) -2.0) 64,64,65
   64 FVEH0 = DUM(9)
      GO TO 67
   65 WRITE(NOUT,1065)
 1065 FORMAT(42H0 STOP.  NUMBER OF VEHICLES NOT ONE OR TWO)
      STOP
   67 UVMIN = DUM(7)
      PSIDMN = DUM(8)
      GO TO 4
    6 XCP10 = DUM(1)
      YCP10 = DUM(2)
      PSI10 = DUM(3)
      PSI1D0= DUM(4)
      U10   = DUM(5)
      V10   = DUM(6)
      GO TO 4
    7 XCP20 = DUM(1)
      YCP20 = DUM(2)
      PSI20 = DUM(3)
      PSI2D0= DUM(4)
      U20   = DUM(5)
      V20   = DUM(6)
      GO TO 4
    8 A1 = DUM(1)
      B1 = DUM(2)
      TR1 = DUM(3)
      FIZ1 = DUM(4)
      FM1 = DUM(5)
      PSIR10 = DUM(6)
      XF1 = DUM(7)
      XR1 = DUM(8)
      YS1 = DUM(9)
      GO TO 4
C               XR1 AND XR2 ARE INPUT AS NEGATIVE QUANTITIES
    9 A2 = DUM(1)
      B2 = DUM(2)
      TR2 = DUM(3)
      FIZ2 = DUM(4)
      FM2 = DUM(5)
      PSIR20 = DUM(6)
      XF2 = DUM(7)
      XR2 = DUM(8)
      YS2 = DUM(9)
      GO TO 4
C            CARD 6   CORNERING STIFFNESS FOR VEH. NO. 1
   10 DO 91  IJ = 1,4
   91 CSTFI(IJ) = DUM(IJ)
      GO TO 4
C            CARD 7   CORNERING STIFFNESS FOR VEH. NO. 2
   11 DO 92 IJ = 5,8
   92 CSTFI(IJ) = DUM(IJ-4)
      GO TO 4
C
C           CARD 8 TORQUE FOR EACH WHEEL FOR VEHICLE 1, TII(8,201)
C     FOLLOWED BY AT MOST 7 VALUES TO A CARD FOR WHEEL1,THEN WHEEL2,ETC.
C           AFTER FINISHING ENTRIES FOR  A WHEEL, START ENTRIES FOR NEXT
C           WHEEL ON A NEW CARD
   12 TBTQ1= DUM(1)
      TETQ1= DUM(2)
      TINCQ1 = DUM(3)
      NTQ1 = (TETQ1 -TBTQ1)/TINCQ1 + 1.2
      NTBLQ1 = DUM(4) + 0.1
C     NTBLQ1- NON-ZERO MEANS DO NOT READ TABLE FOR TORQUE
      IF(NTBLQ1 .NE. 0) GO TO 4
      NTQ = NTQ1
      IB = 1
      IL = 4
      NUM = NO1
   99 DO 101 I = IB,IL
      DO 100 IJ = 1,NTQ,7
      IJL = MIN0(IJ+6,NTQ )
      READ(NIN,1006) CARDIM,(TII(I,K),K=IJ,IJL)
 1006 FORMAT(20A4,T1, 7F10.0)
      WRITE(NOUT,1007) CARDIM,NUM,NAMEQ,I,IJ,IJL
 1007 FORMAT(1X,20A4,5X,7HVEH.NO.,I2,A4,1H(,I2,1H,2HJ=,I4,3H TO,I4,1H))
  100 CONTINUE
  101 CONTINUE
      GO TO 4
C
C           CARD 9 TORQUE FOR EACH WHEEL FOR VEHICLE 2, TII(8,201)
   13 TBTQ2= DUM(1)
      TETQ2= DUM(2)
      TINCQ2 = DUM(3)
      NTQ2 = (TETQ2 -TBTQ2)/TINCQ2 + 1.2
      NTBLQ2 = DUM(4) + 0.1
C     NTBLQ2- NON-ZERO MEANS DO NOT READ TABLE FOR TORQUE
      IF(NTBLQ2 .NE. 0) GO TO 4
      NTQ = NTQ2
      IB = 5
      IL = 8
      NUM = NO2
      GO TO 99
C
C
C     CARD 10 STEER FOR FRONT WHEELS FOR VEHICLE 1, PSIFI(4,201)
C     FOLLOWED BY AT MOST 7 VALUES TO A CARD FOR WHEEL1,THEN WHEEL2,ETC.
C           AFTER FINISHING ENTRIES FOR  A WHEEL, START ENTRIES FOR NEXT
C           WHEEL ON A NEW CARD
   14 TBPSF1 = DUM(1)
      TEPSF1 = DUM(2)
      TINCP1 = DUM(3)
      NPSF1 = (TEPSF1-TBPSF1)/TINCP1 + 1.2
      NTBLP1 = DUM(4) + 0.1
C     NTBLP1- NON-ZERO MEANS DO NOT READ TABLE FOR STEER
      IF(NTBLP1 .NE. 0) GO TO 4
      NPSF = NPSF1
      IB = 1
      IL = 2
      NUM = NO1
  109 DO 111 I = IB,IL
      DO 110 IJ = 1,NPSF,7
      IJL = MIN0(IJ+6,NPSF)
      READ( NIN,1006) CARDIM, (PSIFI(I,K),K=IJ,IJL)
      WRITE(NOUT,1007) CARDIM,NUM,NAMEP,I,IJ,IJL
  110 CONTINUE
  111 CONTINUE
      GO TO 4
C
C     CARD 11 STEER FOR FRONT WHEELS FOR VEHICLE 2, PSIFI(4,201)
   15 TBPSF2 = DUM(1)
      TEPSF2 = DUM(2)
      TINCP2 = DUM(3)
      NPSF2 = (TEPSF2-TBPSF2)/TINCP2 + 1.2
      NTBLP2 = DUM(4) + 0.1
C     NTBLP2- NON-ZERO MEANS DO NOT READ TABLE FOR STEER
      IF(NTBLP2 .NE. 0) GO TO 4
      NPSF = NPSF2
      IB = 3
      IL = 4
      NUM = NO2
      GO TO 109
C
C           CARD 12  TERRAIN ZONES
   16 XBP(1) = DUM(1)
      YBP(1) = DUM(2)
      XBP(2) = DUM(3)
      YBP(2) = DUM(4)
      XMU1   = DUM(5)
      XMU2   = DUM(6)
      CMU    = DUM(7)
      GO TO 4
C         CARD 13    COLLISION PARAMETERS
   17 DELPS0= DUM(1)
      DELRO0= DUM(2)
      ALAMB = DUM(3)
      ZETAV = DUM(4)
      AKV(1)= DUM(5)
      AKV(2)= DUM(6)
      AMU   = DUM(7)
      FMOVIE = DUM(8)
C        IF FMOVIE (EIGHTH FIELD ON CARD 13) NE 0.0, WRITE TAPE FOR
C        MOVIE,WITH TIRE TRACKS AND DAMAGE TABLES AT EACH TIME POINT,BUT
C        COMPUTE VDI ONLY AT END OF RUN.  PRINT INTERMEDIATE DAMAGE
C        TABLES ON FT02.
C        IF FMOVIE EQ 0.0, WRITE TAPE WITH TIRE TRACKS AT EACH TIME
C        POINT, BUT WITH DAMAGE TABLE AND VDI ONLY AT END OF RUN.
C        IF FMOVIE EQ 0.0 DO NOT WRITE FT02.
      GO TO 4
C         CARD 14    COLLISION PARAMETERS
   18 C0 =  DUM(1)
      C1 =  DUM(2)
      C2 =  DUM(3)
      GO TO 4
C           CARD 15, CRITERIA FOR COLLISION LIMITS
C            SET TO STANDARDS IN MAIN PROG.
C          THIS CARD NEED NOT BE FURNISHED. IF USED, GIVE ALL FIELDS.
   19 DO 20 I=1,8
   20 PSLM0(I) = DUM(I)
      GO TO 4
C         CARD 16    DESIRED TRAJECTORY
C     ITRAJ = 0, STRAIGHT LANE
C     ITRAJ = 1, A SECTION OF STRAIGHT LANE FOLLOWED BY A CICRCULAR ARC
C       FOLLOWED XC, YC (LOCATION OF CIRCLE CENTER), RWYRAD
C
   21 ITRAJ =  DUM(1)
      IF ( ITRAJ .EQ. 1 ) THEN
          XCIR = DUM(2)
          YCIR = DUM(3)
          RWYRAD = DUM(4)
C         USE DEFAULT FREQ FOR COMPENSATOR
C          WRITE(6,*) ' RUNNING CURVED ROAD OPTION'
C          WRITE(6,*) ' SELECT COMPENSATOR FOR POSITION FEEDBACK'
C          WRITE(6,*) ' (S + 2*PI*F1)/(S + 2*PI*F2) '
C          WRITE(6,*) ' DEFAULT: F1 = 0.1, F2 = 0.02 HZ'
C          WRITE(6,*) ' ENTER NEW VALUES FOR F1 AND F2: '
C          READ(5,*) FREQ1, FREQ2
C          FREQA = FREQ2*TWOPI
C          FREQB = FREQ1*TWOPI
c          write(6,*) itraj, xcir, ycir, rwyrad
      ELSEIF ( ITRAJ .EQ. 2 ) THEN
          OPEN(UNIT=21, FILE='DESTRAJ.DAT')
          DO 22 I = 1,201
          READ(21,1101, END=24) XYTB(1,I), XYTB(2,I)
 1101 FORMAT(2F10.3)
   22     CONTINUE
   24 CLOSE(21)
      ENDIF
      GO TO 4
C         CARD 17    STEERING CONTROL OPTION
C       IF IOPTION .NE. 0, THEN
C       IOPT = 1, STEP INPUT
C       IOPT = 2, SINUSOIDAL INPUT
C       IOPT = 3, FEEDBACK CONTROL
C       IOPT = 4, FEEDBACK CONTROL with time delay
C       FOR OPTIONS 1,2 RUN WITH ONLY 1 VEHICLE
C
C       ADD IOPT1, AND IOPT2
C       INDIVIDULA OPTION SELECTOR, IF IOPT1 = 0, NO CONTROL FOR VEH 1
C                                   IF IOPT2 = 0, NO CONTROL FOR VEH 2
   31 IOPTION =  DUM(1)
      IOPT1 = DUM(2)
      IOPT2 = DUM(3)
      IF (IOPTION .EQ. 1) THEN
          FVEH0 = 1.0
          DTINT = 0.25
          WRITE(6,*) ' ENTER STEERING STEP INPUT PARAMETERS'
          WRITE(6,*) ' AMPLITUDE (DEG) AND TIME TO GO UP TO AMP (SEC):'
          READ(5,*) STEPPSI, STEPDT
      ELSEIF ( IOPTION .EQ. 2 ) THEN
          FVEH0 = 1.0
          DTINT = 0.25
          WRITE(6,*) ' ENTER STEERING SINUSOIDAL INPUT PARAMETERS'
          WRITE(6,*) ' AMPLITDUE (DEG) AND FREQUENCY (HZ):'
          READ(5,*) SINPSI, SINFREQ
      ELSEIF ( IOPTION .EQ. 3 ) THEN
          WRITE(6,*) ' ENTER FEEDBACK CONTROL PARAMETERS'
          WRITE(6,*) ' GAIN (0.01-0.20) AND LOOK-AHEAD DISTANCE (M):'
          READ(5,*) GAIN, DISLKAHD
          WRITE(6,*) ' ENTER WHEEL MISALIGNMENT AFTER COLLISION'
          WRITE(6,*) ' DW1F, DW1R (CAR 1 FRONT AND REAR WHEEL)'
          READ(5,*) DW1F, DW1R
          WRITE(6,*) ' ENTER WHEEL MISALIGNMENT AFTER COLLISION'
          WRITE(6,*) ' DW2F, DW2R (CAR 2 FRONT AND REAR WHEEL)'
          READ(5,*) DW2F, DW2R
      ELSEIF ( IOPTION .EQ. 4 ) THEN
          WRITE(6,*) ' ENTER FEEDBACK CONTROL PARAMETERS'
          WRITE(6,*) ' GAIN (0.01-0.20) AND LOOK-AHEAD DISTANCE (M):'
          READ(5,*) GAIN, DISLKAHD
          WRITE(6,*) ' ENTER WHEEL MISALIGNMENT AFTER COLLISION'
          WRITE(6,*) ' DW1F, DW1R (CAR 1 FRONT AND REAR WHEEL)'
          READ(5,*) DW1F, DW1R
          WRITE(6,*) ' ENTER WHEEL MISALIGNMENT AFTER COLLISION'
          WRITE(6,*) ' DW2F, DW2R (CAR 2 FRONT AND REAR WHEEL)'
          READ(5,*) DW2F, DW2R
          WRITE(6,*) ' ENTER TIME DELAY (DIGITIZED CYCLE IN ACTUATION)'
          WRITE(6,*) ' DTDGT'
          READ(5,*) DTDGT
C       ASSIGN A SMALLER VALUE TO DTDGT FOR ARRAY STAORAGE
C       IN SUBROUTINE DLY
          DTDGT = DTDGT/10.
          IF (DTTRA0 .GT. DTDGT) DTTRA0 = DTDGT
          IF (DTCLT0 .GT. DTDGT) DTCLT0 = DTDGT
          TDGT = DTDGT
C       ADD SENSOR NOISE TO YAW ANGLE
          WRITE(6,*) ' ADD SINUSOIDAL NOISE TO YAW ANGLE SIGNAL'
          WRITE(6,*) ' ENTER MAGNITUDE OF NOISE (DEG)'
          READ(5,*) YMAGD
          YMAG = YMAGD*RAD
          WRITE(6,*) ' ENTER FREQUENCY OF NOISE (HZ)'
          READ(5,*) YFREQHZ
          YFREQ = TWOPI*YFREQHZ
      ENDIF
      GO TO 4
  120 IF(FMOVIE) 121,200,121
  121 IF(FVEH0 - 2.0) 122,200,122
  122 WRITE(6,1010) FMOVIE,FVEH0
 1010 FORMAT(10H0 FMOVIE =,F3.0,5X,8H FVEH0 =,F3.0 /
     1113H  NON-EXISTENT DAMAGE TABLES (ONE CAR CASE) SHOULD NOT BE WRIT
     2TEN ON TAPE AT EACH TIME POINT (FMOVIE.NE.0.). STOP )
      STOP
C           * * * * * * * * * *
  200 WRITE(NOUT,1008) HED,DADE
 1008 FORMAT(1H1,25X,20A4/26X,20A4/58X,3A4/)
      WRITE(NOUT,1012)  XCP10,   XCP20,   DELPS0,
     1               YCP10,   YCP20,   DELRO0,
     2               PSI10,   PSI20,   ALAMB,
     3               PSI1D0,  PSI2D0,  ZETAV,
     4               U10,    U20,      V10,V20
 1012 FORMAT(1H0,30X,18HINITIAL CONDITIONS,40X,21HCALCULATION CONSTANTS/
     X 13X,13HVEHICLE NO. 1,27X,13HVEHICLE NO. 2 /
     1/ 9X,10HXC10'    =,F8.3,7H INCHES,15X,10HXC20'    =,F8.3,7H INCHES
     2 ,16X,10HDELPSI   =,F8.3,8H DEGREES /
     3 9X,10HYC10'    =,F8.3,7H INCHES,15X,10HYC20'    =,F8.3,7H INCHES,
     416X,10HDELRHO   =,F8.3,7H INCHES /
     5 9X,10HPSI10    =,F8.3,8H DEGREES,14X,10HPSI20    =,F8.3,8H DEGREE
     6S,15X,10HLAMBDA   =,F8.3,21H LB/IN,PRESSURE ERROR/
     7 9X,10HPSI1D0   =,F8.3,8H DEG/SEC,14X,10HPSI2D0   =,F8.3,8H DEG/SE
     8C,15X,10HZETAV    =,F8.3,21H IN/SEC,MIN.FOR FRICT/
     9 9X,10HU10      =,F8.3,7H IN/SEC,15X,10HU20      =,F8.3,7H IN/SEC/
     X 9X,10HV10      =,F8.3,7H IN/SEC,15X,10HV20      =,F8.3,7H IN/SEC)
      WRITE(NOUT,1016) A1,    A2,      AKV(1),
     1                 B1,    B2,      AKV(2),
     2                 TR1,   TR2,     AMU,
     3                 FIZ1,  FIZ2,    C0,
     4                 FM1,   FM2,     C1
 1016 FORMAT(1H0,22X,34HDIMENSIONS AND INERTIAL PROPERTIES,34X,16HDEFORM
     1ABLE LAYER/ 9X,10HA1       =,F8.3,7H INCHES,15X,10HA2       =,F8.3
     2,7H INCHES,16X,10HKV1      =,F8.3,11H LB/(IN**2)/ 9X,10HB1       =
     3,F8.3,7H INCHES,15X,10HB2       =,F8.3,7H INCHES,16X,10HKV2      =
     4,F8.3,11H LB/(IN**2) /  9X,10HTR1      =,F8.3,7H INCHES,15X,10HTR2
     5      =,F8.3,7H INCHES,16X,10HMU,FRICT =,F8.3/ 9X,2HI1,7X,1H=,F8.0
     6,13H LB-SEC**2-IN, 9X,2HI2,7X,1H=,F8.0,13H LB-SEC**2-IN,10X,2HC0,
     77X,1H=,F8.3,12H RESTITUTION/ 9X,2HM1,7X,1H=,F8.3,13H LB-SEC**2/IN,
     8 9X,2HM2,7X,1H=,F8.3,13H LB-SEC**2/IN,10X,2HC1,2X,1H=,E13.5,2X,
     9 7H VERSUS )
      WRITE(NOUT,1018) PSIR10,  PSIR20,  C2,
     1                 XF1,     XF2,
     2                 XR1,     XR2,
     3                 YS1,      YS2
 1018 FORMAT( 9X,10HPSIR10   =,F8.3,8H DEGREES,14X,10HPSIR20   =,F8.3,
     1 8H DEGREES,15X,2HC2,2X,1H=,E13.5, 11H DEFLECTION /
     2 9X,10HXF1      =,F8.3,7H INCHES,15X,10HXF2      =,F8.3,7H INCHES/
     3 9X,10HXR1      =,F8.3,7H INCHES,15X,10HXR2      =,F8.3,7H INCHES/
     4 9X,10HYS1      =,F8.3,7H INCHES,15X,10HYS2      =,F8.3,7H INCHES)
      WRITE(NOUT,1020)  CSTFI(1),     CSTFI(5),   XBP(1),     YBP(1),
     1                  CSTFI(2),     CSTFI(6),   XBP(2),     YBP(2),
     2                  CSTFI(3),     CSTFI(7),   XMU1,
     3                  CSTFI(4),     CSTFI(8),   XMU2,   CMU
 1020 FORMAT(1H0,55X,15HTIRE PROPERTIES /30X,20H CORNERING STIFFNESS ,
     1 41X,37H TIRE-TERRAIN COEF AND TERRAIN ZONES /9X,10HC(1)     =,
     2 F8.0,7H LB/RAD, 15X,10HC(5)     =,F8.0,7H LB/RAD,16X,6HXB1' =,
     3 F8.3,4H IN.,   5X, 6HYB1' =,    F8.3,4H IN.   / 9X,10HC(2)     =,
     4 F8.0,7H  ''   , 15X,10HC(6)     =,F8.0,7H  ''   ,16X,6HXB2' =,
     5 F8.3,4H IN.,   5X, 6HYB2' =,    F8.3,4H IN.   / 9X,10HC(3)     =,
     6 F8.0,7H  ''   , 15X,10HC(7)     =,F8.0,7H  ''   ,16X,6HXMU1 =,
     7 F8.3 / 9X,10HC(4)     =,F8.0,7H  ''   ,15X,10HC(8)     =,F8.0,
     8  7H  ''   ,16X,6HXMU2 =,F8.3 /90X,6HCMU  =,E13.5 )
      WRITE(NOUT,1022) PSLM10,     PSLM50,        T0,
     1                PSLM20,     PSLM60,        TF,
     2                PSLM30,     PSLM70,        DTTRA0,
     3                PSLM40,     PSLM80,        DTCOL0
 1022 FORMAT(1H0,12X,17H PSIB RANGE TESTS,20X,22H PSIBI FOR RHOBI TESTS,
     119X,20HPROGRAM CONTROL DATA /
     2 13X,19H COLLISION CRITERIA, 18X,19H COLLISION CRITERIA /
     3                              9X,10HPSILIM1  =,F8.3,8H DEGREES,14X
     4,10HPSILIM5  =,F8.3,8H DEGREES,15X,10HT0       =,F8.3,11H SEC.,BEG
     5IN/ 9X,10HPSILIM2  =,F8.3,5H   '',17X,10HPSILIM6  =,F8.3,5H   '',
     618X,10HTF       =,F8.3,9H  ''  END/ 9X,10HPSILIM3  =,F8.3,5H   '',
     717X,10HPSILIM7  =,F8.3,5H   '',18X,10HDTTRAJ   =,F8.3,23H  ''  INT
     8EG. INTVL,TRAJ/ 9X,10HPSILIM4  =,F8.3,5H   '',17X,10HPSILIM8  =,
     9F8.3,5H   '',18X,10HDTCOLL   =,F8.3,23H  ''  INTEG.INTVL,COLL )
      WRITE(NOUT,1024)  DTCLT0,DTPRN0,UVMIN,PSIDMN,FVEH0,FMOVIE
 1024 FORMAT( 90X,10HDTCOLT   =,F8.3, 23H  ''  INTEG.INTVL,CPOS /
     1        90X,10HDTPRNT   =,F8.3,21H  ''  PRINT INTERVAL    /
     2        90X,10HUVMIN    =,F8.3,21H IN/SEC STOPPING TEST   /
     3        90X,10HPSIDOT   =,F8.3,21HDEG/SEC STOPPING TEST   /
     4        90X,16HNO.OF VEHICLES =,F3.0 /
     5        90X,10H FMOVIE = ,F3.0,29H(ZERO,FINAL DAMAGE TABLE TAPE/
     6       103X,29H(NON-ZERO,DAMAGE HISTORY TAPE/
     7       103X,29H(ALSO WRITTEN ON FORTRAN 2.  /
     8       103X,29H   (TAPE IS ALWAYS FORTRAN 1) )
      LINES = 49
      ITZER1 = 1
      IB = 1
      ILL = 4
      NTQ = NTQ1
      NUM = NO1
  220 DO 221 I = IB,ILL
      DO 221 J = 1,NTQ
      IF(TII(I,J)) 225,221,225
  221 CONTINUE
      WRITE(NOUT,1030) IB,ILL,NTQ,NUM
 1030 FORMAT(14H0((TII(I,K),I=,I2,1H,,I2,6H),K=1,,I4,40H) TORQUE TABLES
     XALL ZERO FOR VEHICLE NO.,I2)
      LINES = LINES + 2
      IF(IB-1) 222,222,224
  222 ITZER1 = 0
  223 ITZER2 = 1
      IB = 5
      ILL = 8
      NTQ = NTQ2
      NUM = NO2
      GO TO 220
  224 ITZER2 = 0
      GO TO 229
  225 IF(IB-1) 223,223,229
  229 IPZER1 = 1
      IB = 1
      ILL = 2
      NPSF = NPSF1
      NUM = NO1
  230 DO 231 I = IB,ILL
      DO 231 J = 1,NPSF
      IF( PSIFI(I,J)) 235,231,235
  231 CONTINUE
      WRITE(NOUT,1032) IB,ILL,NPSF,NUM
 1032 FORMAT(16H0((PSIFI(I,K),I=,I2,1H,,I2,6H),K=1,,I4,39H) STEER TABLES
     X ALL ZERO FOR VEHICLE NO., I2)
      LINES = LINES + 2
      IF(IB-1) 232,232,234
  232 IPZER1 = 0
  233 IPZER2 = 1
      IB = 3
      ILL = 4
      NPSF = NPSF2
      NUM = NO2
      GO TO 230
  234 IPZER2 = 0
      GO TO 239
  235 IF(IB-1) 233,233,239
  239 IF(ITZER1 + ITZER2 + IPZER1 + IPZER2) 240,290,240
  240 NTPR = 0
      TTARG(1) = 0.0
      IF(ITZER1) 242,257,242
  242 IF(TINCQ1) 243,257,243
  243 NTQ = NTQ1
      IB = 1
      ILL = 4
      NUM = NO1
      Y = TBTQ1
      TINCRQ = TINCQ1
  245 WRITE(NOUT,1009)
 1009 FORMAT(1H0)
      LINES = LINES + 2
      DO 246 I = 1,NTQ
      TTARG(I) = Y
      Y = Y + TINCRQ
  246 CONTINUE
      NNADD = 0
      IF(MOD(NTQ,3) .NE. 0) NNADD = 1
      NTPR = NTQ/3 + NNADD
      NTPR2 =  2*NTPR
      LINES = LINES + NTPR + 4
      IF(LINES.LE.60) GO TO 250
      WRITE(NOUT,1008) HED,DADE
      LINES = NTPR + 8
  250 WRITE(NOUT,1050) NUM
 1050 FORMAT(15H0   VEHICLE NO.,I2 /
     1        1X,   3( 14X, 29H TRACTIVE OR BRAKING FORCE LB )/ 1X,
     2 3(7X,4H SEC, 6X,2HRF,5X,3H LF, 5X,3H RR, 5X,3H LR))
      DO 255 J = 1,NTPR
      IJ = J
      IJL = MIN0(NTQ,IJ+NTPR2 )
      WRITE(NOUT,1052)(TTARG(II),(TII(K,II),K=IB,ILL),II=IJ,IJL,NTPR)
 1052 FORMAT(1X,3(F11.3,4F8.2))
  255 CONTINUE
      IF(IB-5) 257,270,270
  257 IF(ITZER2)258,270,258
  258 IF(TINCQ2) 259,270,259
  259 NTQ = NTQ2
      IB = 5
      ILL = 8
      NUM = NO2
      Y = TBTQ2
      TINCRQ = TINCQ2
      GO TO 245
C
  270 IF(IPZER1) 271,280,271
  271 IF(TINCP1) 272,280,272
  272 NPSF = NPSF1
      IB = 1
      ILL = 2
      NUM = NO1
      Y = TBPSF1
      TINCRP = TINCP1
  275 WRITE(NOUT,1009)
      LINES = LINES + 2
      DO 276 I = 1,NPSF
      TTARG(I) = Y
      Y = Y + TINCRP
  276 CONTINUE
      NNADD = 0
      IF(MOD(NPSF ,5) .NE. 0) NNADD = 1
      NTPR = NPSF/5  + NNADD
      NTPR5 = 4*NTPR
      LINES = LINES + NTPR + 4
      IF(LINES.LE.60) GO TO 278
      WRITE(NOUT,1008) HED,DADE
      LINES = NTPR + 8
  278 WRITE(NOUT,1054) NUM
 1054 FORMAT(15H0   VEHICLE NO.,I2 /
     1        1X,  5( 9X,17H STEER ANGLES,DEG)  /1X,5(5X,4H SEC,1X,16H
     1 PSIF1   PSIF2))
      DO 279 J = 1,NTPR
      IJ = J
      IJL = MIN0(NPSF , IJ+NTPR5 )
      WRITE(NOUT,1056)(TTARG(II),(PSIFI(K,II),K=IB,ILL),II=IJ,IJL,NTPR)
 1056 FORMAT(1X,5(F10.3,2F8.3))
  279 CONTINUE
      IF(IB-3) 280,290,290
  280 IF(IPZER2) 282,290,282
  282 IF(TINCP2) 283,290,283
  283 NPSF = NPSF2
      IB = 3
      ILL = 4
      NUM = NO2
      Y = TBPSF2
      TINCRP = TINCP2
      GO TO 275
  290 RETURN
      END
