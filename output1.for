      SUBROUTINE OUTPUT(IPRT)
C     Version 03-03-83
C     SIMULATION MODEL OF AUTOMOBILE COLLISIONS -SMAC
C
      COMMON/CONST/ G,RAD,PI,TWOPI,PIO2,PI32,ND2,ND4,ND8,NIN,NOUT
C
      COMMON/INTG/NEQ,T,DT,VAR(12),DER(12)
C
      EQUIVALENCE (VAR(1),XCP1),(VAR(2),YCP1),(VAR(3),PSI1),
     1            (VAR(4),PSI1D),(VAR(5),U1),(VAR(6),V1),
     2            (VAR(7),XCP2),(VAR(8),YCP2),(VAR(9),PSI2),
     3            (VAR(10),PSI2D),(VAR(11),U2),(VAR(12),V2)
C
      EQUIVALENCE (DER(1),DXCP1),(DER(2),DYCP1),(DER(3),DPSI1),
     1            (DER(4),DPSI1D),(DER(5),DU1),(DER(6),DV1),
     2            (DER(7),DXCP2),(DER(8),DYCP2),(DER(9),DPSI2),
     3            (DER(10),DPSI2D),(DER(11),DU2),(DER(12),DV2)
C
      COMMON/INPT/  T0,TF,DTTRA0,DTCOL0,DTCLT0,DTPRN0,UVMIN,PSIDMN,FVEH0
     1             ,XCP10,YCP10,PSI10,PSI1D0,U10,V10,
     2              XCP20,YCP20,PSI20,PSI2D0,U20,V20,
     3              A1,B1,TR1,FIZ1,FM1,PSIR10,XF1,XR1,YS1,
     4              A2,B2,TR2,FIZ2,FM2,PSIR20,XF2,XR2,YS2,
     5              CSTFI(8),TBTQ1,TETQ1,TINCQ1,NTBLQ1,NTQ1,
     6              TBTQ2,TETQ2,TINCQ2,NTBLQ2,NTQ2,TII(8,201),
     7              TBPSF1,TEPSF1,TINCP1,NTBLP1,NPSF1,
     8              TBPSF2,TEPSF2,TINCP2,NTBLP2,NPSF2,PSIFI(4,201),
     9              XBP(2),YBP(2),XMU1,XMU2,CMU
C
      COMMON/INPT/  DELPS0,DELRO0,ALAMB,ZETAV,AKV(2) ,AMU,C0,C1,C2,
     1              PSLM10,PSLM20,PSLM30,PSLM40,PSLM50,PSLM60,PSLM70,
     2              PSLM80,HED(40),DADE(3),XINPUT(9)
C
C      COMMON/OPTIONS/ IOPTION, DTINT, STEPPSI, STEPDT, SINPSI, SINFREQ,
C     1                GAIN, DISLKAHD, DW1F, DW1R, DW2F, DW2R
      COMMON/OTHERFILES/ NOUT1, NOUT2
C
      COMMON/TRAJEC/ ITRAJ,XCIR,YCIR,RWYRAD,XYTB(2,201),DLAT1,DLAT2
     1               ,DYAW1,DYAW2
C
      COMMON/INTGR/JCC(4),JCOR(4),NPSIB,IPSIB0,IPSIB,IBB,IFF,NDTAB,
     1             I9,J9(361,2),  NPSJB,IPSJB,I3,ILAST,IL,IND1,IND2,INDI
     2             ,INDJ,ISTOP,ITZER1,ITZER2,IPZER1,IPZER2,ICOUNT,INDXB,
     3             ICOLLP,ICOLL,IQ,IND,IVEH,LL,ICTVDI,ITCOL,ITFLG1,
     4             ITFLG2,NWRDB1,NWRDE1,NWRDB2,NWRDE2,ICOLAC
C
C     IN COMMON /COMP/ DO NOT DISTURB THE ORDER OF THE VARIABLES
C     WHICH ARE EQUIVALENCED TO ARRAYS.
C
      COMMON/COMP/  DTTRAJ,DTCOLL,DTCOLT,DTPRNT,UVMN2,PSIDMA,TPRINT,DTP,
     1              U1V1SQ,U2V2SQ,DELPSI,DELPST,DELPS2,DELRHO,
     2              PSILM1,PSILM2,PSILM3,PSILM4,PSILM5,PSILM6,PSILM7,
     3              PSILM8,EJJ(4,2),GJJ(4,2),C1OC2,PSCC,PSIR1,PSIR2,
     4             XCMXC1,XCMXC2,YCMYC1,YCMYC2,SPSI1,SPSI2,CPSI1,CPSI2,
     5             XCPI,YCPI,PSII,XCPJ,YCPJ,PSIJ,XCMXC,YCMYC,SPSIJ,
     6             CPSIJ,XFI,XRI,YSI,XFJ,XRJ,YSJ,AKVI,AKVJ,EJ,GJ,
     7             XPJ(4),YPJ(4),ANGYX,SPAN,PSIBPI(4),PSIBPB,PSIBPF,
     8             FNPSIB,PSIBB,PSIB,PSFMPS,SCPSIB,CSPSIB,
     9             RHOBI,RHOBIN(4),PSIBIJ,SPSBIJ,CPSBIJ,XBIJ,YBIJ,PSJTB
C
      COMMON/COMP/ PSIBPJ,FNPSJB,PSIBJ,RHOBJ,XYJSQR,SPSIB,CPSIB,XBI,YBI,
     1         PRESI,PRESJ,XYSR,DELTA,CRHO,RHOBIC,RHOBMX,RHOBIT,RHOBT,
     2             SPSI21,CPSI21,X2TEM,Y2TEM,XX,YY,PAV,XXYYSR,FN1,SPSF,
     3             CPSF,X1AV,Y1AV,XYAVSR,X2TERM,Y2TERM,SPS21F,CPS21F,
     4             X2AV,Y2AV,VT1AV,VT2AV,VTMVT,FRICT,FNX1,FNY1,FNN1,
     5             FNX2,FNY2,FNN2,SFX1,SFY1,SFN1,SFX2,SFY2,SFN2,
     6              SFX1C,SFX2C,SFY1C,SFY2C,SFN1C,SFN2C,
     7              SFX1T,SFX2T,SFY1T,SFY2T,SFN1T,SFN2T, TCOL,TEND,
     8              TREST1,TREST2,TCOLS1,TCOLS2,P1TEM,P2TEM,U1V1E,U2V2E,
     9              EXTRA(10)
C
      COMMON/COMPT/ W(8),XWP(8),YWP(8),FLAGW(8),PSIW(8),TQW(8),
     1             TFX,TFY,TMOM,PSIRR,COEF,COEF1,COEF2,TRD2,TRD21,TRD22,
     2             XBMXB,FNUM,A,B,FIZ,FMASS,XC,YC,U,V,PSIC,PSICD,UD2,
     3             SGNU,SGNI,AOMB,CSPSIC,SNPSIC,TRCPSC,TRSPSC,TRPSCD,
     4             XI,XW,YW,SX,SY,S,XPP,YPP,RHO,RHOP,XMUS,XMU,PSI,XNUM,
     5             XDEN,RATIO,ALFA,F,TIF,FC,FCOS,SMAL,FSMX,FS,BETB,FX,FY
     6             ,CSPSI,SNPSI,XCXC,YCYC,SPJ,CPJ,SPIJ,CPIJ,XFJJ,XRJJ,
     7              YSJJ,EJJI,GJJI,XICORJ,YICORJ,NTQ,TBTQ,TETQ,TINCRQ,
     8             NPSF,TBPSF,TEPSF,TINCRPC
      COMMON/TAB/  TRHOB(361,2),TROBMX(361,2),TPSIB(361,2),
     1             TCPSIB(361,2),TSPSIB(361,2),TXB1(100),TYB1(100),
     2             TPSB1(100),TPRES1(100)
C
      DIMENSION   XCMXCI(2),YCMYCI(2),SPSII(2),CPSII(2),PSLM0(8),PSLM(8)
      EQUIVALENCE (XCMXCI(1),XCMXC1),(YCMYCI(1),YCMYC1),(SPSII(1),SPSI1)
     1           ,(CPSII(1),CPSI1),(PSLM0(1),PSLM10),(PSLM(1),PSILM1)
C
C     COMMON VDICON HAS CONSTANTS USED FOR VEHICLE DAMAGE INDEX
C
      COMMON/VDICON/EXTF1( 9),EXTR1( 9),EXTB1( 9),PSP1(12),
     2              EXTF2( 9),EXTR2( 9),EXTB2( 9),PSP2(12),NCOL51(10),
     2              NCOL52(10),MMM( 9)
C
      COMMON/OUTPT/TMOU(55),XCP1OU(55),YCP1OU(55),PSI1OU(55),U1OU(55),
     1            V1OU(55),PS1DOU(55),AX1OU(55),AY1OU(55),XCP2OU(55),
     2             YCP2OU(55),PSI2OU(55),U2OU(55),V2OU(55),PS2DOU(55),
     3          AX2OU(55),AY2OU(55),ALF1OU(55),ALF2OU(55),XWP1OU(55),
     4             XWP2OU( 55),XWP3OU( 55),XWP4OU( 55), XWP5OU( 55),
     5             XWP6OU( 55),XWP7OU( 55),XWP8OU( 55), YWP1OU( 55),
     6             YWP2OU( 55),YWP3OU( 55),YWP4OU( 55), YWP5OU( 55),
     7             YWP6OU( 55),YWP7OU( 55),YWP8OU( 55), FLAG1( 55),
     8             FLAG2( 55), FLAG3( 55),FLAG4( 55),FLAG5( 55),
     9         FLAG6( 55),FLAG7( 55),FLAG8( 55),ACC1OU(55),ACC2OU(55)
C
      COMMON/OUTPT /ARRXY1(10),ARRX1(10),ARRY1(10),ARRT1(10),ARRPS1(10),
     1   ARRDV1(10),ARRXY2(10),ARRX2(10),ARRY2(10),ARRT2(10),ARRPS2(10),
     2   ARRDV2(10),ABIG1,AXBIG1,AYBIG1,TBIG1,DELVS1,ACC1,ACCP1,AXX1,
     3  AYY1,ACTST1,ABIG2,AXBIG2,AYBIG2,TBIG2,DELVS2,ACC2,ACCP2,AXX2,
     4  AYY2,ACTST2,TM,TIMEP,NARRP1(10),NARRP2(10),NUM1,NUM2,
     5         ISAV1,ISAV2,IACDV1,IACDV2,IPAGE
C
      DIMENSION PSIW1RF(55),PSIW2RF(55),DY1(55),DY2(55),DP1(55),DP2(55)
      COMMON /MOVIE/ MOVIE,NMSG
C
      DATA NO1/1/,NO2/2/
      DATA NENDT/4HT = /,NSEC/4H SEC/,NPOR/4HPOR /,NBLNK/4H    /
C
      LL  = LL + 1
      TMOU(LL) = T
      XCP1OU(LL) = XCP1/12.
      YCP1OU(LL) = YCP1/12.
      IF (IOPTION .EQ. 0 ) THEN
         DY1(LL) = YCP1OU(LL)
      ELSE
         DY1(LL) = DLAT1/12.
      ENDIF
      PSI1OU(LL) = PSI1/RAD
      U1OU(LL)   = U1/12.
      V1OU(LL)   = V1/12.
      PS1DOU(LL) = PSI1D/RAD
      AX1OU(LL)  = AXX1
      AY1OU(LL)  = AYY1
      ACC1OU(LL) = ACC1
      ALF1OU(LL) = ANGLE(U1,V1)/RAD
      PSIW1RF(LL) = PSIW(1)/RAD
      DP1(LL) = DYAW1/RAD
      XWP1OU(LL) = XWP(1)/ 12.
      XWP2OU(LL) = XWP(2)/ 12.
      XWP3OU(LL) = XWP(3)/ 12.
      XWP4OU(LL) = XWP(4)/ 12.
      YWP1OU(LL) = YWP(1)/ 12.
      YWP2OU(LL) = YWP(2)/ 12.
      YWP3OU(LL) = YWP(3)/ 12.
      YWP4OU(LL) = YWP(4)/ 12.
      FLAG1(LL)  = FLAGW(1)
      FLAG2(LL)  = FLAGW(2)
      FLAG3(LL)  = FLAGW(3)
      FLAG4(LL)  = FLAGW(4)
C
C     RF = 1,  LF = 2,  RR = 3,  LR = 4
C
      IF(IVEH.EQ.0) GO TO 9
      XCP2OU(LL) = XCP2/12.
      YCP2OU(LL) = YCP2/12.
      IF (IOPTION .EQ. 0 ) THEN
         DY2(LL) = YCP2OU(LL)
      ELSE
         DY2(LL) = DLAT2/12.
      ENDIF
      PSI2OU(LL) = PSI2/RAD
      U2OU(LL)   = U2/12.
      V2OU(LL)   = V2/12.
      PS2DOU(LL) = PSI2D/RAD
      AX2OU(LL)  = AXX2
      AY2OU(LL)  = AYY2
      ACC2OU(LL) = ACC2
      ALF2OU(LL) = ANGLE(U2,V2)/RAD
      PSIW2RF(LL) = PSIW(5)/RAD
      DP2(LL) = DYAW2/RAD
      XWP5OU(LL) = XWP(5)/12.
      XWP6OU(LL) = XWP(6)/12.
      XWP7OU(LL) = XWP(7)/12.
      XWP8OU(LL) = XWP(8)/12.
      YWP5OU(LL) = YWP(5)/12.
      YWP6OU(LL) = YWP(6)/12.
      YWP7OU(LL) = YWP(7)/12.
      YWP8OU(LL) = YWP(8)/12.
      FLAG5(LL)  = FLAGW(5)
      FLAG6(LL)  = FLAGW(6)
      FLAG7(LL)  = FLAGW(7)
      FLAG8(LL)  = FLAGW(8)
C
    9 IF(LL .LT. 51 .AND. IPRT.LT.2) GO TO 16
C
C     PRINT EITHER AT FULL PAGE OR AT A PROGRAMMED STOP
C
      IPAGE = 1
   10 WRITE(NOUT,1010) IPAGE,HED,DADE
 1010 FORMAT(1H1,124X,4HPAGE,I3/26X,20A4/26X,20A4/58X,3A4)
      IF (IPAGE.LT.1 .OR.IPAGE .GT. 5) GO TO 50
      GO TO (11,12,13,14,15) , IPAGE
C
   11 WRITE(NOUT,1011) (NO1,IJ=1,8),
     1              (TMOU(I),XCP1OU(I),YCP1OU(I),PSI1OU(I), U1OU(I),
     2            V1OU(I),PS1DOU(I),AX1OU(I),AY1OU(I),ACC1OU(I),I=1,LL)
 1011 FORMAT(58X,11HVEHICLE NO.,I2 / 20X,13HC.G. POSITION,4X,
     1 13HHEADING ANGLE, 11X,10HVELOCITIES,11X,16HANGULAR VELOCITY, 9X,
     2 12HACCELERATION / 4X,4HTIME,10X,2HXC,I1,1H',8X, 2HYC,I1,1H',7X,
     3 3HPSI,I1,14X, 3HFWD, 9X,3HLAT,13X,3HPSI,I1,3HDOT,11X,2HAX,I1,
     49X,2HAY,I1,7X,3HACC,I1/4X,4HSEC.,11X,2HFT,10X,2HFT, 8X,3HDEG,13X,
     5 6HFT/SEC,7X, 6HFT/SEC,11X, 7HDEG/SEC, 12X,1HG,11X,1HG,10X,1HG /
     6 (F8.4,2X,2F12.2,F12.2,5X,2F12.2,5X,F12.2,5X,2F12.2,F11.2))
C
C       ADD ADDITIONAL OUTPUT FOR VEH1.DAT
C
      WRITE(NOUT1,9011)
     1       (TMOU(I),1,XCP1OU(I)*.3048,YCP1OU(I)*.3048,
     2        PSI1OU(I),U1OU(I)*.3048,AX1OU(I)*.3048,I=1,LL)
 9011 FORMAT(
     1 F8.4,2X,I2,2X,2F12.2,2X,F12.2,2X,2F12.2)
C
      IPAGE = IPAGE + 1
      GO TO 10
C
   12 WRITE(NOUT,1030) (NO1,IJ=1,3)
 1030 FORMAT('0',58X,'VEHICLE NO',I2,'    (*ASTERISK INDICATES SKIDDING
     1TIRE)'/5X,'TIME',7X,'VELOCITY VECTOR',34X,'TIRE TRACKS(FT)'/
     26X,'SEC',7X,'ATAN(V',I1,'/U',I2,') DEG',8X,'RF',20X,'LF',20X,'RR',
     320X,'LR'/38X,3HX1',8X,3HY1',8X,3HX2',8X,3HY2',8X,3HX3',
     48X,3HY3',8X,3HX4',8X,3HY4')
      WRITE(NOUT,1034)(TMOU(I),ALF1OU(I),XWP1OU(I),FLAG1(I),
     1             YWP1OU(I),FLAG1(I),XWP2OU(I),FLAG2(I),YWP2OU(I),
     2             FLAG2(I),XWP3OU(I),FLAG3(I),YWP3OU (I),FLAG3(I),
     3             XWP4OU(I),FLAG4(I),YWP4OU(I),FLAG4(I),I=1,LL)
 1034 FORMAT(1X,F9.3,4X,F12.3,8X,F8.1,A2,1X,F8.1,A2,1X,F8.1,A2,1X,
     1       F8.1,A2,1X, F8.1,A2,1X, F8.1,A2,1X, F8.1,A2,1X,F8.1,A2)
      IPAGE = IPAGE + 1
      IF(IVEH.NE.0) GO TO 10
      IF(IPRT.GE.2) GO TO 45
      LL = 0
      RETURN
C
   13 WRITE(NOUT,1011) (NO2,IJ=1,8),
     1              (TMOU(I),XCP2OU(I),YCP2OU(I),PSI2OU(I), U2OU(I),
     2            V2OU(I),PS2DOU(I),AX2OU(I),AY2OU(I),ACC2OU(I),I=1,LL)
C
C       ADD ADDITIONAL OUTPUT FOR VEH2.DAT
C
      WRITE(NOUT2,9011)
     1       (TMOU(I),2,XCP2OU(I)*.3048,YCP2OU(I)*.3048,
     2        PSI2OU(I),U2OU(I)*.3048,AX2OU(I)*.3048,I=1,LL)
C
      IPAGE = IPAGE + 1
      GO TO 10
C
   14 WRITE(NOUT,1030) (NO2,IJ=1,3)
      WRITE(NOUT,1034)(TMOU(I),ALF2OU(I),XWP5OU(I),FLAG5(I),
     1             YWP5OU(I),FLAG5(I),XWP6OU(I),FLAG6(I),YWP6OU(I),
     2             FLAG6(I),XWP7OU(I),FLAG7(I),YWP7OU (I),FLAG7(I),
     3             XWP8OU(I),FLAG8(I),YWP8OU(I),FLAG8(I),I=1,LL)
      IPAGE = IPAGE + 1
   15 LL = 0
   16 IF( IPRT.GE.2 .OR. MOVIE.NE.0 ) GO TO 19
      RETURN
C
C
      ENTRY OUTDIS
      PSI1TM = PSI1/RAD
      PS1DTM = PSI1D/RAD
      PSI2TM = PSI2/RAD
      PS2DTM = PSI2D/RAD
      IF(IPAGE - 5) 141,140,50
  140 WRITE(6,1010) IPAGE,HED,DADE
      IPAGE = 0
  141 WRITE(6,1012) T, XCP1,YCP1,PSI1TM,PS1DTM,XCP2,YCP2,PSI2TM,PS2DTM
 1012 FORMAT(//,6H TIME=,F8.4,4H SEC, 5X,7H  XCP1=,E14.6,3H IN,
     1   7H, YCP1=,E14.6,3H IN,7H, PSI1=,E14.6,4H DEG,8H, PSI1D=,E14.6,
     2 4H DEG/                       23X,7H  XCP2=,E14.6,3H IN,
     3   7H, YCP2=,E14.6,3H IN,7H, PSI2=,E14.6,4H DEG,8H, PSI2D=,E14.6,
     4  4H DEG )
C
      WRITE(6,1021) DXCP1,DYCP1,DU1,DV1,DXCP2,DYCP2,DU2,DV2
 1021 FORMAT(23H VALUES AFTER RK STEP 4,
     1            7H DXCP1=,E14.6,3X,7H DYCP1=,E14.6,3X,5H DU1=,E14.6,
     2 3X,5H DV1=,E14.6  /
     3       23X, 7H DXCP2=,E14.6,3X,7H DYCP2=,E14.6,3X,5H DU2=,E14.6,
     4 3X,5H DV2=,E14.6  )
      WRITE(6,1019)
 1019 FORMAT(120H USING ENTRY OUTDIS. FIRST TWO COLUMNS OF VDI ARE SET
     1 FROM INCOMPLETE INFORMATION(NARRP  ZER0 AND ARRPS  NOT ORDERED) )
C
   19 CALL OUT2(IPRT)
      IF(IPRT .LT. 2) RETURN
C
C        WHEN MOVIE.NE.0, OUT2 CALLS RNGDAM TO PREPARE DAMAGE TABLES
C        FOR WRITING.   VDI IS COMPUTED ONLY AT END OF RUN.
C
   45 TEND = T - TCOL
  453 IF(ITFLG1) 454,455,454
  454 NWRDB1 = NPOR
      NWRDE1 = NBLNK
      WRITE(6,1036) NO1,NENDT,TEND,NSEC,NWRDB1
 1036 FORMAT(13H0 VEHICLE NO.,I2, 10H, ELAPSED ,A4,F8.4,A4,5X,A4)
      GO TO 456
  455 NWRDB1 = NENDT
      NWRDE1 = NSEC
      WRITE(6,1036) NO1,NWRDB1,TEND,NWRDE1
  456 IF(IVEH) 460,465,460
  460 IF(ITFLG2) 461,462,461
  461 NWRDB2 = NPOR
      NWRDE2 = NBLNK
      WRITE(6,1036) NO2,NENDT,TEND,NSEC,NWRDB2
      GO TO 465
  462 NWRDB2 = NENDT
      NWRDE2 = NSEC
      WRITE(6,1036) NO2,NWRDB2,TEND,NWRDE2
  465 RETURN
   50 ISTOP = 50
      WRITE(6,1020)T, ISTOP
 1020 FORMAT(  3H0AT,F8.3,12HSEC., ISTOP=, I4)
      RETURN
      END
      FUNCTION ANGLE(X,Y)
C      SIMULATION MODEL OF AUTOMOBILE COLLISIONS -SMAC
      COMMON/CONST/ G,RAD,PI,TWOPI,PIO2,PI32,ND2,ND4,ND8,NIN,NOUT
      IF(X) 60,12,20
   12 IF(Y) 14,16,18
   14 ANGLE = PI32
      RETURN
   16 WRITE(NOUT,17)
   17 FORMAT(43H0 X=Y=0.0, THUS ANGLE IS UNDEFINED. SET=0.0)
      ANGLE = 0.0
      RETURN
   18 ANGLE = PIO2
      RETURN
   20 ANGLE = ATAN(Y/X)
      IF(Y) 26,80,80
   26 ANGLE = ANGLE + TWOPI
      RETURN
   60 IF(Y) 66,62,66
   62 ANGLE = PI
      RETURN
   66 ANGLE = ATAN(Y/X)   + PI
   80 RETURN
      END
C
      SUBROUTINE OUT2(IPRTX)
C      SIMULATION MODEL OF AUTOMOBILE COLLISIONS -SMAC
      COMMON/CONST/ G,RAD,PI,TWOPI,PIO2,PI32,ND2,ND4,ND8,NIN,NOUT
      COMMON/INTG/NEQ,T,DT,VAR(12),DER(12)
      EQUIVALENCE (VAR(1),XCP1),(VAR(2),YCP1),(VAR(3),PSI1),
     1            (VAR(4),PSI1D),(VAR(5),U1),(VAR(6),V1),
     2            (VAR(7),XCP2),(VAR(8),YCP2),(VAR(9),PSI2),
     3            (VAR(10),PSI2D),(VAR(11),U2),(VAR(12),V2)
      EQUIVALENCE (DER(1),DXCP1),(DER(2),DYCP1),(DER(3),DPSI1),
     1            (DER(4),DPSI1D),(DER(5),DU1),(DER(6),DV1),
     2            (DER(7),DXCP2),(DER(8),DYCP2),(DER(9),DPSI2),
     3            (DER(10),DPSI2D),(DER(11),DU2),(DER(12),DV2)
      COMMON/INPT/  T0,TF,DTTRA0,DTCOL0,DTCLT0,DTPRN0,UVMIN,PSIDMN,FVEH0
     1             ,XCP10,YCP10,PSI10,PSI1D0,U10,V10,
     2              XCP20,YCP20,PSI20,PSI2D0,U20,V20,
     3              A1,B1,TR1,FIZ1,FM1,PSIR10,XF1,XR1,YS1,
     4              A2,B2,TR2,FIZ2,FM2,PSIR20,XF2,XR2,YS2,
     5              CSTFI(8),TBTQ1,TETQ1,TINCQ1,NTBLQ1,NTQ1,
     6              TBTQ2,TETQ2,TINCQ2,NTBLQ2,NTQ2,TII(8,201),
     7              TBPSF1,TEPSF1,TINCP1,NTBLP1,NPSF1,
     8              TBPSF2,TEPSF2,TINCP2,NTBLP2,NPSF2,PSIFI(4,201),
     9              XBP(2),YBP(2),XMU1,XMU2,CMU
      COMMON/INPT/  DELPS0,DELRO0,ALAMB,ZETAV,AKV(2) ,AMU,C0,C1,C2,
     1              PSLM10,PSLM20,PSLM30,PSLM40,PSLM50,PSLM60,PSLM70,
     2              PSLM80,HED(40),DADE(3),XINPUT(9)
      COMMON/INTGR/JCC(4),JCOR(4),NPSIB,IPSIB0,IPSIB,IBB,IFF,NDTAB,
     1             I9,J9(361,2),  NPSJB,IPSJB,I3,ILAST,IL,IND1,IND2,INDI
     2             ,INDJ,ISTOP,ITZER1,ITZER2,IPZER1,IPZER2,ICOUNT,INDXB,
     3             ICOLLP,ICOLL,IQ,IND,IVEH,LL,ICTVDI,ITCOL,ITFLG1,
     4             ITFLG2,NWRDB1,NWRDE1,NWRDB2,NWRDE2,ICOLAC
C             IN COMMON /COMP/ DO NOT DISTURB THE ORDER OF THE VARIABLES
C                              WHICH ARE EQUIVALENCED TO ARRAYS.
      COMMON/COMP/  DTTRAJ,DTCOLL,DTCOLT,DTPRNT,UVMN2,PSIDMA,TPRINT,DTP,
     1              U1V1SQ,U2V2SQ,DELPSI,DELPST,DELPS2,DELRHO,
     2              PSILM1,PSILM2,PSILM3,PSILM4,PSILM5,PSILM6,PSILM7,
     3              PSILM8,EJJ(4,2),GJJ(4,2),C1OC2,PSCC,PSIR1,PSIR2,
     4             XCMXC1,XCMXC2,YCMYC1,YCMYC2,SPSI1,SPSI2,CPSI1,CPSI2,
     5             XCPI,YCPI,PSII,XCPJ,YCPJ,PSIJ,XCMXC,YCMYC,SPSIJ,
     6             CPSIJ,XFI,XRI,YSI,XFJ,XRJ,YSJ,AKVI,AKVJ,EJ,GJ,
     7             XPJ(4),YPJ(4),ANGYX,SPAN,PSIBPI(4),PSIBPB,PSIBPF,
     8             FNPSIB,PSIBB,PSIB,PSFMPS,SCPSIB,CSPSIB,
     9             RHOBI,RHOBIN(4),PSIBIJ,SPSBIJ,CPSBIJ,XBIJ,YBIJ,PSJTB
      COMMON/COMP/ PSIBPJ,FNPSJB,PSIBJ,RHOBJ,XYJSQR,SPSIB,CPSIB,XBI,YBI,
     1         PRESI,PRESJ,XYSR,DELTA,CRHO,RHOBIC,RHOBMX,RHOBIT,RHOBT,
     2             SPSI21,CPSI21,X2TEM,Y2TEM,XX,YY,PAV,XXYYSR,FN1,SPSF,
     3             CPSF,X1AV,Y1AV,XYAVSR,X2TERM,Y2TERM,SPS21F,CPS21F,
     4             X2AV,Y2AV,VT1AV,VT2AV,VTMVT,FRICT,FNX1,FNY1,FNN1,
     5             FNX2,FNY2,FNN2,SFX1,SFY1,SFN1,SFX2,SFY2,SFN2,
     6              SFX1C,SFX2C,SFY1C,SFY2C,SFN1C,SFN2C,
     7              SFX1T,SFX2T,SFY1T,SFY2T,SFN1T,SFN2T, TCOL,TEND,
     8              TREST1,TREST2,TCOLS1,TCOLS2,P1TEM,P2TEM,U1V1E,U2V2E,
     9              EXTRA(10)
      DIMENSION   XCMXCI(2),YCMYCI(2),SPSII(2),CPSII(2),PSLM0(8),PSLM(8)
      EQUIVALENCE (XCMXCI(1),XCMXC1),(YCMYCI(1),YCMYC1),(SPSII(1),SPSI1)
     1           ,(CPSII(1),CPSI1),(PSLM0(1),PSLM10),(PSLM(1),PSILM1)
      COMMON/TAB/  TRHOB(361,2),TROBMX(361,2),TPSIB(361,2),
     1             TCPSIB(361,2),TSPSIB(361,2),TXB1(100),TYB1(100),
     2             TPSB1(100),TPRES1(100)
C        COMMON VDICON HAS CONSTANTS USED FOR VEHICLE DAMAGE INDEX
      COMMON/VDICON/EXTF1( 9),EXTR1( 9),EXTB1( 9),PSP1(12),
     2              EXTF2( 9),EXTR2( 9),EXTB2( 9),PSP2(12),NCOL51(10),
     2              NCOL52(10),MMM( 9)
      COMMON/OUTPT/TMOU(55),XCP1OU(55),YCP1OU(55),PSI1OU(55),U1OU(55),
     1            V1OU(55),PS1DOU(55),AX1OU(55),AY1OU(55),XCP2OU(55),
     2             YCP2OU(55),PSI2OU(55),U2OU(55),V2OU(55),PS2DOU(55),
     3          AX2OU(55),AY2OU(55),ALF1OU(55),ALF2OU(55),XWP1OU(55),
     4             XWP2OU( 55),XWP3OU( 55),XWP4OU( 55), XWP5OU( 55),
     5             XWP6OU( 55),XWP7OU( 55),XWP8OU( 55), YWP1OU( 55),
     6             YWP2OU( 55),YWP3OU( 55),YWP4OU( 55), YWP5OU( 55),
     7             YWP6OU( 55),YWP7OU( 55),YWP8OU( 55), FLAG1( 55),
     8             FLAG2( 55), FLAG3( 55),FLAG4( 55),FLAG5( 55),
     9         FLAG6( 55),FLAG7( 55),FLAG8( 55),ACC1OU(55),ACC2OU(55)
      COMMON/OUTPT /ARRXY1(10),ARRX1(10),ARRY1(10),ARRT1(10),ARRPS1(10),
     1   ARRDV1(10),ARRXY2(10),ARRX2(10),ARRY2(10),ARRT2(10),ARRPS2(10),
     2   ARRDV2(10),ABIG1,AXBIG1,AYBIG1,TBIG1,DELVS1,ACC1,ACCP1,AXX1,
     3  AYY1,ACTST1,ABIG2,AXBIG2,AYBIG2,TBIG2,DELVS2,ACC2,ACCP2,AXX2,
     4  AYY2,ACTST2,TM,TIMEP,NARRP1(10),NARRP2(10),NUM1,NUM2,
     5         ISAV1,ISAV2,IACDV1,IACDV2,IPAGE
      COMMON /MOVIE/ MOVIE,NMSG
      COMMON/OUTPT1/X1OU(361),X2OU(361),Y1OU(361),Y2OU(361),R1OU(361),
     1           R2OU(361),PSB1OU(361),PSB2OU(361),ASTR1(361),ASTR2(361)
     2              ,PSIM1(10),INPSM1(10),IKD11(10),IKD21(10),IRNG1,IK1,
     3        IWRAP1,PSIM2(10),INPSM2(10),IKD12(10),IKD22(10),IRNG2,IK2,
     4        IWRAP2,NCOL11(10),NCOL12(10),NCOL21(10),NCOL22(10),
     5              NCOL31(10),NCOL32(10),NCOL41(10),NCOL42(10),
     6              NCOL61(10),NCOL62(10),NCOL71(10),NCOL72(10)
     7              ,PSD11(10),PSD21(10),PSD12(10),PSD22(10),DVVDI1(10),
     8              DVVDI2(10)
      DIMENSION OUTP0(3876)
      EQUIVALENCE(OUTP0 (1),X1OU(1))
C
C
   17 IF(ICTVDI) 23,18,23
   18 DO 20 I=1,3876
   20 OUTP0(I) = 0.0
      N6 = NOUT
      IF(MOVIE.EQ.0) GO TO 23
C        PAGE HEADING FOR BEGINNING OF EXTRA DATA SET  FT02
      WRITE(NMSG,1010) IPAGE,HED,DADE
      ICTVDI = 1
C
   23 IJ = 1
      IF(IPRTX.LT.2) GO TO 232
C
C        IPRTX EQ 2 SIGNIFIES END OF RUN. PASSED FROM  SUBROUTINE OUTPUT
C        CALL DAMAGE ONLY AT END OF RUN
C        SAVMAX DOES SOME SPECIAL PROCESSING AT END OF RUN ONLY.
C       IPRTX EQ 1 AT THIS POINT WHEN MOVIE NE 0, OR OUTDIS CALLED.
C        MOVIE NE 0 PUTS DAMAGE TABLES ON TAPE AT EACH TIME POINT, AND
C        WRITES ON EXTRA DATA SET FT02 (NMSG=2,THEN NMSG=6 WHEN IPRTX=2)
C
C
C           TEMPORARY MESSAGE
      WRITE(NOUT,620)
  620 FORMAT(80H0 MESSAGE FROM SUBROUTINE OUT2,REFERRING TO VALUES OBTAI
     XNED IN SUBROUTINE SAVMAX)
      IF(NUM1) 230,230,231
  230 WRITE(NOUT,623) IJ,NUM1
  623 FORMAT(9H  VEH.NO., I2, 35H,  NUMBER OF MAX ACCEL .GE. 1.0 G =,I3,
     1 37H, DO NOT COMPUTE VEHICLE DAMAGE INDEX)
C             NUM1 =0 IMPLIES RIGID BARRIER, WITH NO ACCEL .GE.1.0 G
C            AVOID VDI COMPUTATION FOR CASES WHERE THERE IS NO
C           ACCELERATION .GE. 1.0 G                 SIMILARLY FOR VEH 2
      GO TO 232
  231 WRITE(NOUT ,621)(ARRT1(I),ARRXY1(I),ARRX1(I),ARRY1(I),ARRPS1(I),
     1     NARRP1(I),ARRDV1(I), I=1,NUM1)
  621 FORMAT(120H0    ARRT1             ARRXY1               ARRX1
     1         ARRY1         ARRPS1(RAD)         NARRP1     ARRDV1(MPH)/
     2 (F9.4,4E20.6, I8,E20.6))
C
  232 CALL            RNGDAM(TRHOB(1,1),TPSIB(1,1),TCPSIB(1,1),
     1     TSPSIB(1,1),J9(1,1),R1OU,PSB1OU,X1OU,Y1OU,ASTR1,PSP1,PSD11,
     2     PSD21,PSIM1,INPSM1,IKD11,IKD21,NARRP1,NUM1,IK1,IRNG1,IWRAP1,
     3                IJ,ISTOP,NDTAB,DELPSI,XF1,XR1,YS1,NMSG,IPRTX)
C           RADIAN VALUES FOR PSB1OU,PSIM1,PSD11,PSD21,PSB2OU,PSIM2,
C                          PSD12,PSD22 RETURNED FROM SUBROUTINE RNGDAM
C          IK1=NO.OF ENTRIES IN R1OU,PSB1OU,X1OU,Y1OU,ASTR1
C          NUM1=NO.OF ENTRIES IN NARRP1
C          IRNG1=NO.OF ENTRIES IN PSIM1,INPSM1,IKD11,IKD21,PSD11,PSD21
      IF(IPRTX.LT.2) GO TO 240
      IF(NUM1) 239,240,239
C              SUBROUTINE DAMAGE WILL SET STANDARD CODE
  239 CALL DAMAGE(PSIM1,IRNG1,PSP1,PSB1OU,X1OU,Y1OU,ASTR1,
     1            IKD11,IKD21,IK1,EXTF1,EXTR1,EXTB1,XF1,XR1,YS1,
     2 NCOL31,NCOL41,NCOL61,NCOL71,MMM,ISTOP,PSD11,PSD21,ARRPS1,INPSM1,
     3  IJ)
C
  240 IJ = 2
      IF(IPRTX.LT.2) GO TO 243
C
C           TEMPORARY MESSAGE
      WRITE(NOUT,620)
      IF(NUM2) 241,241,242
  241 WRITE(NOUT,623) IJ,NUM2
      GO TO 243
  242 WRITE(NOUT ,622)(ARRT2(I),ARRXY2(I),ARRX2(I),ARRY2(I),ARRPS2(I),
     1     NARRP2(I),ARRDV2(I), I=1,NUM2)
  622 FORMAT(120H0    ARRT2             ARRXY2               ARRX2
     1         ARRY2         ARRPS2(RAD)         NARRP2     ARRDV2(MPH)/
     2 (F9.4,4E20.6, I8,E20.6))
C
  243 CALL            RNGDAM(TRHOB(1,2),TPSIB(1,2),TCPSIB(1,2),
     1     TSPSIB(1,2),J9(1,2),R2OU,PSB2OU,X2OU,Y2OU,ASTR2,PSP2,PSD12,
     2     PSD22,PSIM2,INPSM2,IKD12,IKD22,NARRP2,NUM2,IK2,IRNG2,IWRAP2,
     3                IJ,ISTOP,NDTAB,DELPSI,XF2,XR2,YS2,NMSG,IPRTX)
      IF(IPRTX.LT.2) GO TO 248
      IF(NUM2) 247,248,247
  247 CALL DAMAGE(PSIM2,IRNG2,PSP2,PSB2OU,X2OU,Y2OU,ASTR2,
     1            IKD12,IKD22,IK2,EXTF2,EXTR2,EXTB2,XF2,XR2,YS2,
     2 NCOL32,NCOL42,NCOL62,NCOL72,MMM,ISTOP,PSD12,PSD22,ARRPS2,INPSM2,
     3  IJ)
C
  248 IF( IPAGE - 5) 27,26,50
   26 WRITE(NMSG,1010) IPAGE,HED,DADE
 1010 FORMAT(1H1,124X,4HPAGE,I3/26X,20A4/26X,20A4/58X,3A4)
C        IPAGE EQ 5 HERE AT END OF RUN, OR AFTER FULL PAGES PRINTED,
C        SO PRINT HEADING.
C        IPAGE IS LESS THAN 5 AT THIS POINT WHEN ENTRY OUTDIS IS USED.
C        IPAGE ALSO .LT.5 HERE WHEN MOVIE NE 0
   27 IF(IPRTX.LT.2)  WRITE(NMSG,1011) T
 1011 FORMAT(12H0    TIME = , F8.4)
      WRITE(NMSG,1013) IK1,IK2
 1013 FORMAT( 51X,14HDAMAGE SUMMARY, 2X, 29H(DISPLACED POINTS, * J POINT
     1) /26X,13HVEHICLE NO. 1,52X,13HVEHICLE NO. 2/26X,I5,7H POINTS,53X,
     1 I5,7H POINTS/  10X,5HRHOB1,7X,5HPSIB1,
     2  9X,2HX1,10X,2HY1,25X, 5HRHOB2,7X,5HPSIB2,9X,2HX2,10X,2HY2 /
     3 10X,6HINCHES,7X,3HDEG, 8X,6HINCHES,6X,6HINCHES, 23X, 6HINCHES,
     4  7X,3HDEG, 8X,6HINCHES, 6X,6HINCHES )
      IF(IK1 - IK2)  28,30,32
   28 LK  = IK1
      IKK = LK + 1
      LKK = IK2
      LCO = LKK
      GO TO 34
   30 LK = IK1
      IKK = 0
      LKK = 0
      LCO = LK
      GO TO 34
   32 LK = IK2
      IKK = LK + 1
      LKK = IK1
      LCO = LKK
   34 DO 340 I =1,IK1
  340 PSB1OU(I) = PSB1OU(I) /RAD
      DO 341 I=1,IK2
  341 PSB2OU(I) = PSB2OU(I) /RAD
      IF (LK) 35,350,35
   35 WRITE(NMSG,1014)(ASTR1(IJ),R1OU(IJ),PSB1OU(IJ),X1OU(IJ),Y1OU(IJ),
     X                ASTR2(IJ),R2OU(IJ),PSB2OU(IJ),X2OU(IJ),Y2OU(IJ),
     X                IJ=1,LK)
 1014 FORMAT(2X,A1,1X,2F12.3,2F12.4, 15X,A1,1X,2F12.3,2F12.4)
  350 IF(LKK) 36,40,36
   36 IF(LKK-IK1)39,37,39
   37 WRITE(NMSG,1016)( ASTR1(IJ),R1OU(IJ),PSB1OU(IJ),X1OU(IJ),Y1OU(IJ),
     X                IJ=IKK,LKK)
 1016 FORMAT(2X,A1,1X,2F12.3,2F12.4)
      GO TO 40
   39 WRITE(NMSG,1018)(ASTR2(IJ),R2OU(IJ),PSB2OU(IJ),X2OU(IJ),Y2OU(IJ),
     X                IJ=IKK,LKK)
 1018 FORMAT(67X,A1,1X,2F12.3,2F12.4)
C
   40 IF(IRNG1 - IRNG2) 41,42,43
   41 LR = IRNG1
      IRR = LR + 1
      LRR = IRNG2
      LCO = LCO + LRR
      GO TO 44
   42 LR = IRNG1
      IRR  = 0
      LRR  = 0
      LCO = LCO + LR
      GO TO 44
   43 LR = IRNG2
      IRR = LR + 1
      LRR = IRNG1
      LCO = LCO + LRR
C        LCO COUNTS POSSIBLE LINES FOR DAMAGE ARRAYS
C            COMPARE TO 45, ALLOWING 15 LINES FOR HEADINGS.
   44 IF(LCO - 45) 442,440,440
C             IPAGE IS LESS THAN 5 IF THE ENTRY OUTDIS WAS USED,
C                 OR MOVIE NE  0
  440 IF(IPAGE-5) 442,441,441
  441 IPAGE = 6
      WRITE(NMSG,1010) IPAGE,HED,DADE
      IPAGE = 0
  442 IF(IPRTX-2) 4421,4422,4422
 4421 WRITE(NMSG,1030) IRNG1,IRNG2
 1030 FORMAT(5X,6HIRNG1=,I3,5X,6HIRNG2=,I3)
      RETURN
C               VDI NOT COMPUTED WHEN IPRTX LT 2
C
 4422 WRITE(NOUT,1022) IRNG1,IRNG2
 1022 FORMAT( 1H0,25X,13HVEHICLE NO. 1,52X,13HVEHICLE NO. 2/28X,I3,7H RA
     1NGES,55X,I3,7H RANGES / 8X,5HBEGIN,13X,3HEND, 7X,8HMIDPOINT,2X,
     210HVEH.DAMAGE,3X,3HVEL,12X,5HBEGIN,13X,3HEND, 7X,8HMIDPOINT,2X,
     310HVEH.DAMAGE,3X,3HVEL    / 4X,5HRHOB1,3X,5HPSIB1,4X,5HRHOB1,3X,
     45HPSIB1,5X,5HPSIM1,4X,5HINDEX,3X,7HDELTA V,  7X,5HRHOB2,3X,5HPSIB2
     5,4X,5HRHOB2,3X,5HPSIB2,5X,5HPSIM2,4X,5HINDEX,3X,7HDELTA V   /
     6 4X,6HINCHES,3X,3HDEG,5X,6HINCHES,3X,3HDEG,7X,3HDEG,15X,3HMPH,
     7 9X,6HINCHES,3X,3HDEG,5X,6HINCHES,3X,3HDEG,7X,3HDEG,15X,3HMPH    )
C      CALLS TO ENTRY OUTDIS HAVE NOT COMPLETED RESULTS FOR FIRST TWO
C       COLUMNS OF VDI
      IF(NUM1) 62,61,62
   61 NCOL51(1) = 0
C            INTEGER SHOULD NOT BE PRINTABLE WITH FORMAT A
      DVVDI1(1) = ARRDV1(1)
C      ASSUME ONLY THE FIRST DELTA V FROM SUBROUTINE SAVMAX HAS VALUE.
C      ASSUME IRNG1 = 1 WHEN NUM1 = 0
C      NARRP AND INPSM NOT EVALUATED WHEN NUM=0 (SUBROUTINE RNGDAM)
      GO  TO 80
   62 DO 75 I=1,IRNG1
      JNCOL = INPSM1(I)
      CALL NCOLDV(NARRP1,ARRDV1,MMM,NUM1,JNCOL,ISTOPP,NCOL1,NCOL2,DVSUM)
      IF(ISTOPP) 67,69,67
   67 ISTOP = 70
      NCOL = NARRP1(JNCOL)
   68 WRITE(NOUT,680) ISTOP,NCOL
  680 FORMAT(8H0 ISTOP=,I3,5X,6H NCOL=,I3)
      GO TO 75
   69 NCOL11(I) = NCOL1
      NCOL21(I) = NCOL2
      DVVDI1(I) = DVSUM
   75 CONTINUE
   80 IF(NUM2) 82,81,82
   81 NCOL52(1) = 0
      DVVDI2(1) = ARRDV2(1)
      GO TO 96
   82 DO 95 I = 1,IRNG2
      JNCOL = INPSM2(I)
      CALL NCOLDV(NARRP2,ARRDV2,MMM,NUM2,JNCOL,ISTOPP,NCOL1,NCOL2,DVSUM)
      IF(ISTOPP) 87,89,87
   87 ISTOP = 71
      NCOL = NARRP2(JNCOL)
      WRITE(NOUT,680) ISTOP,NCOL
      GO TO 95
   89 NCOL12(I) = NCOL1
      NCOL22(I) = NCOL2
      DVVDI2(I) = DVSUM
   95 CONTINUE
C                IF NUM1 OR NUM2 =0, THE VDI FOR THAT VEHICLE IS NOT
C                   COMPUTED,AND SHOULD CONTAIN INTEGER 0, NOT PRINTABLE
C                  IRNG1 IS PROBABLY =1 WHEN NUM1=0.STORE ONLY DVVDI1(1)
C                  SIMILARLY FOR VEHICLE 2 IF NUM2=0.
   96 DO 97 I=1,IRNG1
   97 PSIM1(I) = PSIM1(I)/RAD
      DO 99 I=1,IRNG2
   99 PSIM2(I) = PSIM2(I)/RAD
      IF(LR) 443,445,443
  443 WRITE(N6,1024)(ASTR1(IKD11(IJ)),R1OU(IKD11(IJ)),PSB1OU(IKD11(IJ)),
     1               ASTR1(IKD21(IJ)),R1OU(IKD21(IJ)),PSB1OU(IKD21(IJ)),
     2               PSIM1(IJ),NCOL11(IJ),NCOL21(IJ),NCOL31(IJ),
     3           NCOL41(IJ),NCOL51(IJ),NCOL61(IJ),NCOL71(IJ),DVVDI1(IJ),
     4               ASTR2(IKD12(IJ)),R2OU(IKD12(IJ)),PSB2OU(IKD12(IJ)),
     5               ASTR2(IKD22(IJ)),R2OU(IKD22(IJ)),PSB2OU(IKD22(IJ)),
     6               PSIM2(IJ),NCOL12(IJ),NCOL22(IJ),NCOL32(IJ),
     7              NCOL42(IJ),NCOL52(IJ),NCOL62(IJ),NCOL72(IJ),
     8               DVVDI2(IJ), IJ=1,LR)
 1024 FORMAT(1X,A1,F7.2,F8.2,2X,A1,F7.2,F8.2,1X,F8.2,3X,7A1,2X,F7.2,
     1       4X,A1,F7.2,F8.2,2X,A1,F7.2,F8.2,1X,F8.2,3X,7A1,2X,F7.2)
  445 IF(LRR) 446,45 ,446
  446 IF(LRR-IRNG1) 448,447,448
  447 WRITE(N6,1026)(ASTR1(IKD11(IJ)),R1OU(IKD11(IJ)),PSB1OU(IKD11(IJ)),
     1               ASTR1(IKD21(IJ)),R1OU(IKD21(IJ)),PSB1OU(IKD21(IJ)),
     2               PSIM1(IJ),NCOL11(IJ),NCOL21(IJ),NCOL31(IJ),
     3              NCOL41(IJ),NCOL51(IJ),NCOL61(IJ),NCOL71(IJ),
     4               DVVDI1(IJ), IJ=IRR,LRR)
 1026 FORMAT(1X,A1,F7.2,F8.2,2X,A1,F7.2,F8.2,1X,F8.2,3X,7A1,2X,F7.2)
      GO TO 45
  448 WRITE(N6,1028)(ASTR2(IKD12(IJ)),R2OU(IKD12(IJ)),PSB2OU(IKD12(IJ)),
     1               ASTR2(IKD22(IJ)),R2OU(IKD22(IJ)),PSB2OU(IKD22(IJ)),
     2               PSIM2(IJ),NCOL12(IJ),NCOL22(IJ),NCOL32(IJ),
     3              NCOL42(IJ),NCOL52(IJ),NCOL62(IJ),NCOL72(IJ),
     4               DVVDI2(IJ), IJ=IRR,LRR)
 1028 FORMAT(67X,A1,F7.2,F8.2,2X,A1,F7.2,F8.2,1X,F8.2,3X,7A1,2X,F7.2)
   45 RETURN
   50 ISTOP = 51
      WRITE(NOUT,1020) T, ISTOP
 1020 FORMAT(  3H0AT,F8.3,12HSEC., ISTOP=, I4)
      RETURN
      END
